{"version":3,"sources":["../../src/pages/events/events.module.ts","../../node_modules/@ionic-native/network/index.js","../../src/pages/events/events.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AACsB;AACJ;AACR;AAgBhD;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAb5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;gBACpC,8EAAgB;aACjB;YACD,SAAS,EAAE;gBACT,6EAAa;gBACb,sEAAO;aACR;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;ACrB7B;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACuD;AACvD;AACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7I0C;AACe;AACG;AACjB;AACK;AAEhD;;;;;GAKG;AAOH;IAIE,oBAAmB,OAAsB,EAAS,SAAoB,EAAS,SAAwB,EAAU,KAAmB,EAAU,GAAY;QAAvI,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,cAAS,GAAT,SAAS,CAAe;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,QAAG,GAAH,GAAG,CAAS;QACxJ,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,6BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEK,+BAAU,GAAhB;;;;;;4BACiB,qBAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC;;wBAAhD,QAAQ,GAAG,SAAqC;wBAChD,IAAI,GAAG,EAAE,CAAC;wBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACtB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;6BACzB,IAAI,CAAC,UAAC,GAAG;4BACR,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;4BAClB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;4BAC3C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;wBAC9B,CAAC,CAAC;6BACD,KAAK,CAAC,UAAO,GAAG;;;;wCACf,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;6CACzB,QAAQ,EAAR,wBAAQ;wCACF,qBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;;wCAAzC,IAAI,GAAG,SAAkC,CAAC;wCAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wCACnB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;;wCAE7B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wCAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;;;;6BAEtB,CAAC,CAAC;;;;;KAEJ;IAlCU,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;mBAK0J;OAJ/I,UAAU,CAoCtB;IAAD,CAAC;AAAA;SApCY,UAAU,e","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EventsPage } from './events';\nimport { EventProvider } from '../../providers/event/event';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Network } from '@ionic-native/network';\n\n\n@NgModule({\n  declarations: [\n    EventsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EventsPage),\n    HttpClientModule\n  ],\n  providers: [\n    EventProvider,\n    Network\n  ]\n})\nexport class EventsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/events/events.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\n/**\n * @name Network\n * @description\n * Requires Cordova plugin: cordova-plugin-network-information. For more info, please see the [Network plugin docs](https://github.com/apache/cordova-plugin-network-information).\n *\n * @usage\n * ```typescript\n * import { Network } from '@ionic-native/network';\n *\n * constructor(private network: Network) { }\n *\n * ...\n *\n * // watch network for a disconnect\n * let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n *   console.log('network was disconnected :-(');\n * });\n *\n * // stop disconnect watch\n * disconnectSubscription.unsubscribe();\n *\n *\n * // watch network for a connection\n * let connectSubscription = this.network.onConnect().subscribe(() => {\n *   console.log('network connected!');\n *   // We just got a connection but we need to wait briefly\n *\n   // before we determine the connection type. Might need to wait.\n *   // prior to doing any api requests as well.\n *   setTimeout(() => {\n *     if (this.network.type === 'wifi') {\n *       console.log('we got a wifi connection, woohoo!');\n *     }\n *   }, 3000);\n * });\n *\n * // stop connect watch\n * connectSubscription.unsubscribe();\n *\n * ```\n * @advanced\n * The `type` property will return one of the following connection types: `unknown`, `ethernet`, `wifi`, `2g`, `3g`, `4g`, `cellular`, `none`\n */\nvar Network = (function (_super) {\n    __extends(Network, _super);\n    function Network() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns an observable to watch connection changes\n     * @return {Observable<any>}\n     */\n    Network.prototype.onchange = function () {\n        return merge(this.onConnect(), this.onDisconnect());\n    };\n    /**\n     * Get notified when the device goes offline\n     * @returns {Observable<any>} Returns an observable.\n     */\n    Network.prototype.onDisconnect = function () {\n        return;\n    };\n    /**\n     * Get notified when the device goes online\n     * @returns {Observable<any>} Returns an observable.\n     */\n    Network.prototype.onConnect = function () {\n        return;\n    };\n    Network.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Network.ctorParameters = function () { return []; };\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"type\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"downlinkMax\", void 0);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onchange\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'offline'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onDisconnect\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'online'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onConnect\", null);\n    Network = __decorate([\n        Plugin({\n            pluginName: 'Network',\n            plugin: 'cordova-plugin-network-information',\n            pluginRef: 'navigator.connection',\n            repo: 'https://github.com/apache/cordova-plugin-network-information',\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Network);\n    return Network;\n}(IonicNativePlugin));\nexport { Network };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/network/index.js\n// module id = 309\n// module chunks = 1","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { EventProvider } from '../../providers/event/event';\nimport { CacheService } from 'ionic-cache';\nimport { Network } from '@ionic-native/network';\n\n/**\n * Generated class for the EventsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-events',\n  templateUrl: 'events.html',\n})\nexport class EventsPage {\n\n  events: Array<any>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public eventProv: EventProvider, private cache: CacheService, private net: Network) {\n    this.initView();\n  }\n\n  initView() {\n    this.initEvents();\n  }\n\n  async initEvents() {\n    let evCached = await this.cache.itemExists('events');\n    let data = [];\n    console.log(this.net);\n    this.eventProv.getEvents()\n    .then((res) => {\n      this.events = res;\n      this.cache.saveItem('events', this.events);\n      console.log('Con Conexión');\n    })\n    .catch(async (err) => {\n      console.log('Sin Conexión');\n      if(evCached){\n        data = await this.cache.getItem('events');\n        this.events = data;\n        console.log('Está cacheada');\n      }else{\n        console.log('No está cacheada');\n        this.events = data;\n      }\n    });\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/events/events.ts"],"sourceRoot":""}